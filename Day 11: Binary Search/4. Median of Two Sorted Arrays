https://leetcode.com/problems/median-of-two-sorted-arrays/
https://takeuforward.org/data-structure/median-of-two-sorted-arrays-of-different-sizes/
class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
      int n1=nums1.length;
        int n2=nums2.length;
        if(n1>n2)return findMedianSortedArrays(nums2,nums1);  // TO MINIMISE THE COMPLEXITY (LOG(MIN(M,N))
        int start=0;                                                    // INITIAL
        int end=n1;------------------------------------------->      //  SECOND SUBB ARRAY LENGTH
        while(start<=end){
            int cut1=(start+end)/2;                                     // CUT1 ON FIRST ARRAY
            int cut2=(n1+n2+1)/2-cut1;                                  // CUT2 ON SECON ARRAY
            int l1=(cut1==0)? Integer.MIN_VALUE:nums1[cut1-1];         // LEFT 1 ->1ST ARRAY
            int l2=(cut2==0)? Integer.MIN_VALUE:nums2[cut2-1];         // LEFT 2 -> 2ND ARRAY
            int r1=(cut1==n1)? Integer.MAX_VALUE:nums1[cut1];          // RIGHT 1 ->1ST ARRAY
            int r2=(cut2==n2)? Integer.MAX_VALUE:nums2[cut2];          // RIGHT 2--> 2ND ARRAY
            if(l1<=r2 && l2<=r1){
                if((n1+n2)%2==0){                                      // IF EVEN
                    return (Math.max(l1,l2)+Math.min(r1,r2))/2.0;
                }else{
                    return Math.max(l1,l2);                            // IF ODD
                }
            }else if(l1>r2){
                  end=cut1-1;
            }else{
                start=cut1+1;
            }
        }
        return 0.0;
        
    }
}
