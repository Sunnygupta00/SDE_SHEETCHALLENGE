========================================== USING TWO QUEUE ===============================================
==================>> HINT : USING SECOND QUEUE FOR MAKING FOR MAINTAING PEEK()
class MyStack {
  Queue<Integer> q1 =new ArrayDeque<>();
      Queue<Integer> q2 =new ArrayDeque<>();
    public MyStack() {
        
    }
--------------------------------------------------------------------------------------------------------------------------    
    public void push(int x) {
      q2.offer(x);
        while(q1.size()>0){
            q2.offer(q1.poll()); // TAKI X PEEK BAN JAYE
        }
        while(q2.size()>0){
            q1.offer(q2.poll()); // shifting in q1 ab x mera peek ban gaya hai
        }
        
    }
--------------------------------------------------------------------------------------------------------------------------    
    public int pop() {
        return q1.poll();
    }
--------------------------------------------------------------------------------------------------------------------------    
    public int top() {
       return q1.peek();    
    }
--------------------------------------------------------------------------------------------------------------------------    
    public boolean empty() {
       return q1.size()==0;    
    }
}
========================================================================================================================
                      ==========================< OPTIMISED ONE >===========================
  HINT ====>>>FIRST ADD ELEMENT, THEN SIZE-1 ELEMENT KO POP KRKE FIRSE INSERT KR DO, ELEMENT KO PEEK BANANE KE LIYE :) 
 ==============================================================================================================================   
class MyStack {
  Queue<Integer> q1 =new ArrayDeque<>();
    public MyStack() {
        
    }
--------------------------------------------------------------------------------------------------------------------------    
    public void push(int x) {
      q1.offer(x);
      for(int i=0;i<q1.size()-1;i++){
          q1.offer(q1.poll());           // removing all element after x such that mera x peek ban jaye;
      } 
    }
--------------------------------------------------------------------------------------------------------------------------    
    public int pop() {
        return q1.poll();
    }
--------------------------------------------------------------------------------------------------------------------------    
    public int top() {
       return q1.peek();    
    }
--------------------------------------------------------------------------------------------------------------------------    
    public boolean empty() {
       return q1.size()==0;    
    }
}
--------------------------------------------------------------------------------------------------------------------------
